---
import { getAllProducts } from '../../lib/airtable.js';
import type { AirtableProduct } from '../../lib/airtable.js';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';

// Get URL parameters for search and pagination
const url = new URL(Astro.request.url);
const searchQuery = url.searchParams.get('search') || '';
const currentPage = parseInt(url.searchParams.get('page') || '1');
const itemsPerPage = 12; // Show 12 products per page

let allProducts: AirtableProduct[] = [];
let products: AirtableProduct[] = [];
let filteredProducts: AirtableProduct[] = [];
let errorMessage = '';
let totalPages = 0;
let hasNextPage = false;
let hasPrevPage = false;

try {
  allProducts = await getAllProducts();
  
  // Enhanced search function
  function searchProducts(products: any[], query: string) {
    if (!query) return products;
    
    const searchTerms = query.toLowerCase().trim().split(/\s+/);
    
    return products.filter(product => {
      // Get all searchable fields
      const title = product.fields.Title?.toLowerCase() || '';
      const description = product.fields.Description?.toLowerCase() || '';
      const slug = product.fields.Slug?.toLowerCase() || '';
      const category = product.fields.Category?.toLowerCase() || 'kitchen essentials';
      
      // Extract ASIN from affiliate URL if available
      const affiliateUrl = product.fields['Affiliate URL'] || '';
      const asinMatch = affiliateUrl.match(/\/dp\/([A-Z0-9]{10})/i);
      const asin = asinMatch ? asinMatch[1].toLowerCase() : '';
      
      // Create searchable text combining all fields
      const searchableText = `${title} ${description} ${slug} ${category} ${asin}`.toLowerCase();
      
      // Check if query is an ASIN (10 characters, alphanumeric)
      const isASINQuery = /^[A-Z0-9]{10}$/i.test(query.trim());
      if (isASINQuery && asin) {
        return asin === query.toLowerCase();
      }
      
      // For regular search, check if ALL search terms are found
      const allTermsMatch = searchTerms.every(term => {
        // Direct substring match
        if (searchableText.includes(term)) return true;
        
        // Fuzzy matching for common variations
        const variations = generateSearchVariations(term);
        return variations.some(variation => searchableText.includes(variation));
      });
      
      return allTermsMatch;
    });
  }
  
  // Generate search variations for better matching
  function generateSearchVariations(term: string): string[] {
    const variations = [term];
    
    // Common word variations and stemming
    const wordMap: { [key: string]: string[] } = {
      'bag': ['bags', 'bagging'],
      'bags': ['bag', 'bagging'],
      'wrap': ['wrapping', 'wrapper', 'wraps'],
      'wrapping': ['wrap', 'wrapper', 'wraps'],
      'shrink': ['shrinking', 'shrinker'],
      'vacuum': ['vac', 'sealer'],
      'seal': ['sealing', 'sealer', 'sealed'],
      'fresh': ['fresher', 'freshness'],
      'storage': ['store', 'storing'],
      'kitchen': ['cook', 'cooking', 'culinary'],
      'tool': ['tools', 'equipment'],
      'tools': ['tool', 'equipment'],
      'home': ['house', 'household'],
      'electronic': ['electronics', 'tech'],
      'electronics': ['electronic', 'tech']
    };
    
    if (wordMap[term]) {
      variations.push(...wordMap[term]);
    }
    
    // Add partial matches for longer words
    if (term.length > 4) {
      variations.push(term.substring(0, term.length - 1)); // Remove last char
      variations.push(term.substring(0, term.length - 2)); // Remove last 2 chars
    }
    
    return variations;
  }
  
  // Filter products using enhanced search
  if (searchQuery) {
    filteredProducts = searchProducts(allProducts, searchQuery);
  } else {
    filteredProducts = allProducts;
  }
  
  // Calculate pagination
  totalPages = Math.ceil(filteredProducts.length / itemsPerPage);
  const startIndex = (currentPage - 1) * itemsPerPage;
  const endIndex = startIndex + itemsPerPage;
  
  products = filteredProducts.slice(startIndex, endIndex);
  hasNextPage = currentPage < totalPages;
  hasPrevPage = currentPage > 1;
  
} catch (error) {
  console.error('Error fetching products:', error);
  errorMessage = 'Unable to load products. Please check your Airtable configuration.';
}
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Products - True Essentials</title>
  <meta name="description" content="Discover our curated collection of essential products. Find the best deals and exclusive items.">
  
  <!-- Open Graph / Social Media -->
  <meta property="og:type" content="website">
  <meta property="og:title" content="Products - True Essentials">
  <meta property="og:description" content="Discover our curated collection of essential products. Find the best deals and exclusive items.">
  <meta property="og:url" content="https://yoursite.com/products">
  
  <!-- Twitter Card -->
  <meta name="twitter:card" content="summary">
  <meta name="twitter:title" content="Products - True Essentials">
  <meta name="twitter:description" content="Discover our curated collection of essential products. Find the best deals and exclusive items.">
  
  <!-- SEO Enhancement -->
  <meta name="robots" content="index, follow">
  <link rel="canonical" href="https://yoursite.com/products">
  
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: system-ui, -apple-system, sans-serif;
      line-height: 1.6;
      color: #333;
      background-color: #f8f9fa;
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 1rem;
    }

    main {
      margin-top: 2rem;
    }

    .page-title {
      text-align: center;
      margin-bottom: 3rem;
    }

    .page-title h1 {
      font-size: 2.5rem;
      margin-bottom: 0.5rem;
      color: #1e293b;
    }

    .page-title p {
      font-size: 1.1rem;
      color: #64748b;
      max-width: 600px;
      margin: 0 auto;
    }

    /* ==========================================================================
       SEARCH SECTION
       ========================================================================== */

    .search-section {
      margin-bottom: 3rem;
      max-width: 600px;
      margin-left: auto;
      margin-right: auto;
    }

    .search-form {
      margin-bottom: 1rem;
    }

    .search-wrapper {
      position: relative;
      display: flex;
      align-items: center;
      background: white;
      border: 2px solid #e2e8f0;
      border-radius: 50px;
      padding: 8px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
      transition: all 0.3s ease;
    }

    .search-wrapper:focus-within {
      border-color: #4287a8;
      box-shadow: 0 8px 20px rgba(66, 135, 168, 0.15);
    }

    .search-icon {
      margin-left: 1rem;
      margin-right: 0.75rem;
      color: #64748b;
      flex-shrink: 0;
    }

    .search-input {
      flex: 1;
      border: none;
      background: transparent;
      padding: 1rem 0.5rem;
      font-size: 1rem;
      color: #1e293b;
      outline: none;
      font-family: inherit;
    }

    .search-input::placeholder {
      color: #94a3b8;
    }

    .clear-search {
      margin-right: 0.75rem;
      padding: 0.5rem;
      color: #64748b;
      text-decoration: none;
      border-radius: 50%;
      transition: all 0.2s ease;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .clear-search:hover {
      background: #f1f5f9;
      color: #dc2626;
    }

    .search-btn {
      background: #4287a8;
      color: white;
      border: none;
      padding: 0.75rem 1.5rem;
      border-radius: 40px;
      font-size: 0.9rem;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.2s ease;
    }

    .search-btn:hover {
      background: #336f74;
      transform: translateY(-1px);
    }

    .search-results-info {
      text-align: center;
      color: #64748b;
      font-size: 0.9rem;
      display: flex;
      flex-direction: column;
      gap: 0.25rem;
    }



    /* ==========================================================================
       PAGINATION
       ========================================================================== */

    .pagination {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 1.5rem;
      margin-top: 4rem;
      padding: 2rem 0;
      border-top: 1px solid #e2e8f0;
    }

    .pagination-info {
      color: #64748b;
      font-size: 0.9rem;
      font-weight: 500;
    }

    .pagination-controls {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .pagination-btn {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.75rem 1rem;
      background: white;
      border: 1px solid #e2e8f0;
      border-radius: 8px;
      color: #4287a8;
      text-decoration: none;
      font-weight: 500;
      font-size: 0.9rem;
      transition: all 0.2s ease;
    }

    .pagination-btn:hover {
      background: #f8fafc;
      border-color: #4287a8;
      transform: translateY(-1px);
    }

    .pagination-numbers {
      display: flex;
      gap: 0.25rem;
      margin: 0 1rem;
    }

    .pagination-number {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      background: white;
      border: 1px solid #e2e8f0;
      border-radius: 6px;
      color: #64748b;
      text-decoration: none;
      font-weight: 500;
      font-size: 0.9rem;
      transition: all 0.2s ease;
    }

    .pagination-number:hover {
      background: #f8fafc;
      border-color: #4287a8;
      color: #4287a8;
    }

    .pagination-number.active {
      background: #4287a8;
      border-color: #4287a8;
      color: white;
    }

    .pagination-number.active:hover {
      background: #336f74;
      border-color: #336f74;
    }

    .pagination-ellipsis {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      color: #94a3b8;
      font-weight: 500;
      font-size: 0.9rem;
    }

    .products-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
      gap: var(--space-8);
      margin-bottom: var(--space-20);
    }

    /* ==========================================================================
       PREMIUM PRODUCT CARD DESIGN
       ========================================================================== */

    .product-card {
      background: white;
      border-radius: var(--radius-xl);
      overflow: hidden;
      box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.05),
        0 1px 3px rgba(0, 0, 0, 0.1);
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      position: relative;
      border: 1px solid var(--color-gray-100);
      group: hover;
    }

    .product-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(135deg, 
        rgba(66, 135, 168, 0.03) 0%, 
        rgba(51, 111, 116, 0.05) 100%);
      opacity: 0;
      transition: opacity 0.3s ease;
      z-index: 1;
    }

    .product-card:hover {
      transform: translateY(-8px);
      box-shadow: 
        0 20px 40px rgba(0, 0, 0, 0.1),
        0 8px 16px rgba(0, 0, 0, 0.08),
        0 0 0 1px rgba(66, 135, 168, 0.1);
    }

    .product-card:hover::before {
      opacity: 1;
    }

    /* Product Image Section */
    .product-image-wrapper {
      position: relative;
      overflow: hidden;
      background: var(--color-gray-50);
    }

    .product-image-wrapper-link {
      display: block;
      width: 100%;
      text-decoration: none;
      position: relative;
      z-index: 1;
    }

    .product-image {
      width: 100%;
      height: 280px;
      object-fit: cover;
      transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      background: linear-gradient(135deg, var(--color-gray-50) 0%, var(--color-gray-100) 100%);
      display: flex;
      align-items: center;
      justify-content: center;
      color: var(--color-gray-400);
      font-size: var(--text-base);
      font-weight: 500;
    }

    .product-card:hover .product-image {
      transform: scale(1.05);
    }

    /* Product Badge */
    .product-badge {
      position: absolute;
      top: var(--space-3);
      left: var(--space-3);
      background: rgba(66, 135, 168, 0.9);
      color: white;
      padding: var(--space-1) var(--space-3);
      border-radius: var(--radius-full);
      font-size: var(--text-xs);
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.05em;
      backdrop-filter: blur(10px);
      z-index: 2;
      pointer-events: none;
    }

    /* Quick View Overlay */
    .product-quick-actions {
      position: absolute;
      top: var(--space-3);
      right: var(--space-3);
      display: flex;
      flex-direction: column;
      gap: var(--space-2);
      opacity: 0;
      transform: translateX(20px);
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      z-index: 2;
    }

    .product-card:hover .product-quick-actions {
      opacity: 1;
      transform: translateX(0);
    }

    .quick-action-btn {
      width: 40px;
      height: 40px;
      background: rgba(255, 255, 255, 0.95);
      border: none;
      border-radius: var(--radius-lg);
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.2s ease;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      backdrop-filter: blur(10px);
    }

    .quick-action-btn:hover {
      background: white;
      transform: scale(1.1);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }

    /* Product Content */
    .product-content {
      padding: var(--space-6);
      position: relative;
      z-index: 2;
    }

    .product-category {
      font-size: var(--text-xs);
      font-weight: 600;
      color: var(--color-primary-600);
      text-transform: uppercase;
      letter-spacing: 0.1em;
      margin-bottom: var(--space-2);
    }

    .product-title {
      font-size: var(--text-lg);
      font-weight: 700;
      margin-bottom: var(--space-3);
      color: var(--color-gray-900);
      line-height: 1.4;
      font-family: var(--font-display);
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }

    .product-description {
      color: var(--color-gray-600);
      font-size: var(--text-sm);
      line-height: 1.6;
      margin-bottom: var(--space-4);
      display: -webkit-box;
      -webkit-line-clamp: 3;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }



    /* Trust Indicators */
    .product-trust-indicators {
      display: flex;
      align-items: center;
      gap: var(--space-4);
      margin-bottom: var(--space-5);
      padding: var(--space-3);
      background: var(--color-gray-50);
      border-radius: var(--radius-lg);
      border: 1px solid var(--color-gray-100);
    }

    .trust-indicator {
      display: flex;
      align-items: center;
      gap: var(--space-1);
      font-size: var(--text-xs);
      color: var(--color-gray-600);
      font-weight: 500;
    }

    .trust-indicator-icon {
      font-size: var(--text-sm);
    }

    /* Product Actions */
    .product-actions {
      display: flex;
      gap: var(--space-3);
    }

    .btn {
      padding: var(--space-3) var(--space-4);
      border: none;
      border-radius: var(--radius-lg);
      font-size: var(--text-sm);
      font-weight: 600;
      text-decoration: none;
      text-align: center;
      cursor: pointer;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      display: inline-flex;
      align-items: center;
      justify-content: center;
      gap: var(--space-2);
      position: relative;
      overflow: hidden;
    }

    .btn::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
      transition: left 0.5s;
    }

    .btn:hover::before {
      left: 100%;
    }

    .btn-primary {
      background: linear-gradient(135deg, var(--color-primary-600) 0%, var(--color-primary-700) 100%);
      color: white;
      flex: 1;
      box-shadow: 0 4px 12px rgba(66, 135, 168, 0.3);
    }

    .btn-primary:hover {
      background: linear-gradient(135deg, var(--color-primary-700) 0%, var(--color-primary-800) 100%);
      transform: translateY(-2px);
      box-shadow: 0 8px 20px rgba(66, 135, 168, 0.4);
    }

    .btn-secondary {
      background: white;
      color: var(--color-gray-700);
      border: 2px solid var(--color-gray-200);
      min-width: 120px;
    }

    .btn-secondary:hover {
      background: var(--color-gray-50);
      border-color: var(--color-gray-300);
      transform: translateY(-1px);
    }



    .error-message {
      background: #fee2e2;
      border: 1px solid #fecaca;
      color: #dc2626;
      padding: 1rem;
      border-radius: 8px;
      text-align: center;
      margin: 2rem 0;
    }

    .empty-state {
      text-align: center;
      padding: 4rem 2rem;
      color: #64748b;
    }

    .empty-state h2 {
      font-size: 1.5rem;
      margin-bottom: 0.5rem;
      color: #475569;
    }

    .stats {
      background: white;
      padding: 1rem;
      border-radius: 8px;
      margin-bottom: 2rem;
      text-align: center;
      color: #64748b;
      font-size: 0.9rem;
    }

    footer {
      background: white;
      border-top: 1px solid #e2e8f0;
      padding: 2rem 0;
      margin-top: 4rem;
      text-align: center;
      color: #64748b;
    }

    /* ==========================================================================
       RESPONSIVE DESIGN - MOBILE OPTIMIZATION
       ========================================================================== */

    @media (max-width: 768px) {
      .header-content {
        flex-direction: column;
        gap: var(--space-4);
      }

      nav a {
        margin: 0 var(--space-4);
      }

      .page-title h1 {
        font-size: var(--text-3xl);
      }

      .products-grid {
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: var(--space-6);
      }

      .product-image {
        height: 240px;
      }

      .product-content {
        padding: var(--space-5);
      }

      .product-trust-indicators {
        flex-wrap: wrap;
        gap: var(--space-2);
      }

      .trust-indicator {
        font-size: var(--text-xs);
      }

      .product-actions {
        flex-direction: column;
        gap: var(--space-3);
      }

      .btn-secondary {
        min-width: auto;
      }

      .product-quick-actions {
        position: static;
        opacity: 1;
        transform: none;
        flex-direction: row;
        justify-content: flex-end;
        margin-bottom: var(--space-2);
      }
    }

    @media (max-width: 480px) {
      .products-grid {
        grid-template-columns: 1fr;
        gap: var(--space-5);
      }



      .product-trust-indicators {
        justify-content: center;
      }

      .search-wrapper {
        flex-direction: column;
        gap: 0.5rem;
        padding: 1rem;
        border-radius: 1rem;
      }

      .search-input {
        text-align: center;
        padding: 0.75rem;
      }

      .search-btn {
        width: 100%;
        margin: 0;
      }

      .clear-search {
        position: absolute;
        top: 0.5rem;
        right: 0.5rem;
      }

      .pagination-controls {
        flex-direction: column;
        gap: 1rem;
      }

      .pagination-numbers {
        margin: 0;
      }

      .pagination-btn {
        width: 100%;
        justify-content: center;
      }
    }
  </style>
</head>
<body>
  <Header />

  <main class="container">
    <div class="page-title">
      <h1>Our Products</h1>
      <p>Discover our curated collection of essential products, carefully selected for quality and value.</p>
    </div>

    {/* Search Section */}
    <div class="search-section">
      <form class="search-form" method="GET">
        <div class="search-wrapper">
          <svg class="search-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <circle cx="11" cy="11" r="8"/>
            <path d="m21 21-4.35-4.35"/>
          </svg>
          <input 
            type="text" 
            name="search" 
            placeholder="Search products, brands, or ASIN..." 
            class="search-input"
            value={searchQuery}
            autocomplete="off"
          />
          {searchQuery && (
            <a href="/products" class="clear-search" title="Clear search">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <line x1="18" y1="6" x2="6" y2="18"/>
                <line x1="6" y1="6" x2="18" y2="18"/>
              </svg>
            </a>
          )}
          <button type="submit" class="search-btn">Search</button>
        </div>
      </form>
      
      {searchQuery && (
        <div class="search-results-info">
          <span>Showing results for <strong>"{searchQuery}"</strong></span>
          <span>({filteredProducts.length} result{filteredProducts.length !== 1 ? 's' : ''} found)</span>
        </div>
      )}
      

    </div>

    {errorMessage && (
      <div class="error-message">
        <strong>Error:</strong> {errorMessage}
        <br>
        <small>Make sure your Airtable is configured correctly and environment variables are set.</small>
      </div>
    )}

    {!errorMessage && products.length > 0 && (
      <>
        <div class="stats">
          Showing {((currentPage - 1) * itemsPerPage) + 1} - {Math.min(currentPage * itemsPerPage, filteredProducts.length)} of {filteredProducts.length} product{filteredProducts.length !== 1 ? 's' : ''}
          {searchQuery && <span> matching "{searchQuery}"</span>}
        </div>

        <div class="products-grid">
          {products.map((product) => (
            <div class="product-card">
              <a 
                href={product.fields['Affiliate URL']}
                target="_blank"
                rel="noopener noreferrer"
                class="product-image-wrapper-link"
              >
                <div class="product-image-wrapper">
                  <div class="product-badge">Featured</div>
                  <img 
                    src={product.fields['Image URL'] || 'https://via.placeholder.com/400x400/e2e8f0/64748b?text=📦+Product'}
                    alt={product.fields.Title}
                    class="product-image"
                    loading="lazy"
                    onerror="this.onerror=null; this.src='https://via.placeholder.com/400x400/e2e8f0/64748b?text=📦+Product';"
                  />
                </div>
              </a>
              
              <div class="product-content">
                <div class="product-category">{product.fields.Category || 'Miscellaneous'}</div>
                <a 
                  href={product.fields['Affiliate URL']}
                  target="_blank"
                  rel="noopener noreferrer"
                  style="text-decoration: none; color: inherit;"
                >
                  <h3 class="product-title">{product.fields.Title}</h3>
                </a>
                <p class="product-description">{product.fields.Description}</p>
                
                <div class="product-actions">
                  <a 
                    href={product.fields['Affiliate URL']}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="btn btn-primary"
                  >
                    🛒 Buy on Amazon
                  </a>
                  <a 
                    href={`/products/${product.fields.Slug}`}
                    class="btn btn-secondary"
                  >
                    Details
                  </a>
                </div>
              </div>
            </div>
          ))}
        </div>

        {/* Pagination */}
        {totalPages > 1 && (
          <div class="pagination">
            <div class="pagination-info">
              Page {currentPage} of {totalPages}
            </div>
            
            <div class="pagination-controls">
              {hasPrevPage && (
                <a 
                  href={`/products?${new URLSearchParams({ 
                    ...(searchQuery && { search: searchQuery }), 
                    page: String(currentPage - 1) 
                  }).toString()}`}
                  class="pagination-btn pagination-prev"
                >
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="m15 18-6-6 6-6"/>
                  </svg>
                  Previous
                </a>
              )}
              
                            <div class="pagination-numbers">
                {/* Show first page */}
                {currentPage > 3 && totalPages > 5 && (
                  <>
                    <a 
                      href={`/products?${new URLSearchParams({ 
                        ...(searchQuery && { search: searchQuery }), 
                        page: '1' 
                      }).toString()}`}
                      class="pagination-number"
                    >
                      1
                    </a>
                    {currentPage > 4 && <span class="pagination-ellipsis">...</span>}
                  </>
                )}
                
                {/* Show pages around current */}
                {[currentPage - 1, currentPage, currentPage + 1].map(pageNum => {
                  if (pageNum < 1 || pageNum > totalPages) return null;
                  const isActive = pageNum === currentPage;
                  const href = `/products?${new URLSearchParams({ 
                    ...(searchQuery && { search: searchQuery }), 
                    page: String(pageNum) 
                  }).toString()}`;
                  
                  return (
                    <a 
                      href={href}
                      class={`pagination-number ${isActive ? 'active' : ''}`}
                    >
                      {pageNum}
                    </a>
                  );
                })}
                
                {/* Show last page */}
                {currentPage < totalPages - 2 && totalPages > 5 && (
                  <>
                    {currentPage < totalPages - 3 && <span class="pagination-ellipsis">...</span>}
                    <a 
                      href={`/products?${new URLSearchParams({ 
                        ...(searchQuery && { search: searchQuery }), 
                        page: String(totalPages) 
                      }).toString()}`}
                      class="pagination-number"
                    >
                      {totalPages}
                    </a>
                  </>
                )}
              </div>
              
              {hasNextPage && (
                <a 
                  href={`/products?${new URLSearchParams({ 
                    ...(searchQuery && { search: searchQuery }), 
                    page: String(currentPage + 1) 
                  }).toString()}`}
                  class="pagination-btn pagination-next"
                >
                  Next
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="m9 18 6-6-6-6"/>
                  </svg>
                </a>
              )}
            </div>
          </div>
        )}
      </>
    )}

    {!errorMessage && products.length === 0 && searchQuery && (
      <div class="empty-state">
        <h2>No products found</h2>
        <p>No products match your search for "<strong>{searchQuery}</strong>".</p>
        <p style="margin-top: 1rem;">
          <a href="/products" class="btn btn-primary">View All Products</a>
        </p>
      </div>
    )}

    {!errorMessage && products.length === 0 && !searchQuery && (
      <div class="empty-state">
        <h2>No Products Yet</h2>
        <p>Products will appear here once you add them through the admin interface.</p>
        <p style="margin-top: 1rem;">
          <a href="/admin" class="btn btn-primary">Go to Admin</a>
        </p>
      </div>
    )}
  </main>

  <Footer />
</body>
</html> 