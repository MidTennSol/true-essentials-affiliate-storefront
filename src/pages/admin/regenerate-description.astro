---
// Regenerate description for a product using enhanced AI
import { getProductById, updateProduct } from '../../lib/airtable';
import { generateEnhancedDescription } from '../../lib/content';

const isAuthenticated = Astro.cookies.get('admin_auth')?.value === 'authenticated';
if (!isAuthenticated) {
  return new Response(JSON.stringify({ error: 'Unauthorized' }), {
    status: 401,
    headers: { 'Content-Type': 'application/json' }
  });
}

if (Astro.request.method !== 'POST') {
  return new Response(JSON.stringify({ error: 'Method not allowed' }), {
    status: 405,
    headers: { 'Content-Type': 'application/json' }
  });
}

try {
  const formData = await Astro.request.formData();
  const productId = formData.get('productId') as string;
  
  if (!productId) {
    return new Response(JSON.stringify({ error: 'Product ID is required' }), {
      status: 400,
      headers: { 'Content-Type': 'application/json' }
    });
  }

  // Get the current product
  const product = await getProductById(productId);
  if (!product || !product.fields?.Title) {
    return new Response(JSON.stringify({ error: 'Product not found' }), {
      status: 404,
      headers: { 'Content-Type': 'application/json' }
    });
  }

  console.log(`Regenerating description for: ${product.fields.Title}`);

  // Generate new enhanced description
  const newDescription = await generateEnhancedDescription(product.fields.Title);
  
  // Update the product with new description
  await updateProduct(productId, {
    description: newDescription
  });

  console.log(`âœ… Description regenerated successfully`);

  return new Response(JSON.stringify({
    success: true,
    newDescription: newDescription,
    message: 'Description regenerated successfully!'
  }), {
    status: 200,
    headers: { 'Content-Type': 'application/json' }
  });

} catch (error) {
  console.error('Error regenerating description:', error);
  
  return new Response(JSON.stringify({
    error: 'Failed to regenerate description: ' + String(error)
  }), {
    status: 500,
    headers: { 'Content-Type': 'application/json' }
  });
}
--- 